{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/init/": {
      "post": {
        "description": "initial database population,This endpoint could only populate the database if there are no records in the database.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/login": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "login page",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Login route, only 'login' and 'password' are needed in the request body.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "login": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login"
          }
        }
      }
    },
    "/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "sign up",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstname": {
                  "example": "any"
                },
                "lastname": {
                  "example": "any"
                },
                "username": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "address": {
                  "example": "any"
                },
                "tlfnumber": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "logout routes, it will delete the JWT cookie",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/category/": {
      "get": {
        "tags": [
          "Guest routes"
        ],
        "description": "Get all categories",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/brand/": {
      "get": {
        "tags": [
          "Guest routes"
        ],
        "description": "Get all brands",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/product/": {
      "get": {
        "tags": [
          "Guest routes"
        ],
        "description": "Get all products",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/search/product": {
      "post": {
        "tags": [
          "Guest routes"
        ],
        "description": "Search by product name",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "product": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/search/brand": {
      "post": {
        "tags": [
          "Guest routes"
        ],
        "description": "Search by brand name",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "brand": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/search/category": {
      "post": {
        "tags": [
          "Guest routes"
        ],
        "description": "Search by category name",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "category": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/products/addproduct": {
      "post": {
        "tags": [
          "AdminProducts"
        ],
        "description": "Add a product",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "price": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "imageUrl": {
                  "example": "any"
                },
                "quantity": {
                  "example": "any"
                },
                "brandId": {
                  "example": "any"
                },
                "categoryId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/products/": {
      "get": {
        "tags": [
          "AdminProducts"
        ],
        "description": "Gets the list of all available products for Admin.",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/products/updateproduct/{id}": {
      "put": {
        "tags": [
          "AdminProducts"
        ],
        "description": "update a product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "price": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "imageUrl": {
                  "example": "any"
                },
                "quantity": {
                  "example": "any"
                },
                "brandId": {
                  "example": "any"
                },
                "categoryId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/products/deleteproduct/{id}": {
      "delete": {
        "tags": [
          "AdminProducts"
        ],
        "description": "delete a product,soft delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/products/deletetest/{id}": {
      "delete": {
        "tags": [
          "Testing-Product"
        ],
        "description": "delete a product,only for testing purpose",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/products/reactiveproduct/{id}": {
      "put": {
        "tags": [
          "AdminProducts"
        ],
        "description": "reactive a product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/brands/": {
      "get": {
        "tags": [
          "AdminBrands"
        ],
        "description": "Gets the list of all available brands for Admin.",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/brands/addbrand": {
      "post": {
        "tags": [
          "AdminBrands"
        ],
        "description": "Add a brand to database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "brandname": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/brands/updatebrand/{id}": {
      "put": {
        "tags": [
          "AdminBrands"
        ],
        "description": "update a brand",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "newbrand": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/brands/deletebrand/{id}": {
      "delete": {
        "tags": [
          "AdminBrands"
        ],
        "description": "delete a brand from database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/categories/": {
      "get": {
        "tags": [
          "AdminCategories"
        ],
        "description": "Gets the list of all available categories for Admin.",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/categories/addcategory": {
      "post": {
        "tags": [
          "AdminCategories"
        ],
        "description": "Add a category",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "categoryname": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/categories/updatecategory/{id}": {
      "put": {
        "tags": [
          "AdminCategories"
        ],
        "description": "Update a category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "newcategory": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/categories/category/{id}": {
      "delete": {
        "tags": [
          "AdminCategories"
        ],
        "description": "Delete a category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/orders/ordersDetails": {
      "get": {
        "tags": [
          "AdminOrders"
        ],
        "description": "get all orders and their details, like product name and purchased quantity",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/orders/orderstatus/{id}": {
      "put": {
        "tags": [
          "AdminOrders"
        ],
        "description": "change the status of an order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "newStatus": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/orders/": {
      "get": {
        "tags": [
          "AdminOrders"
        ],
        "description": "Get all orders, like status,membership, orderNumber,UserId",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/users/": {
      "get": {
        "tags": [
          "AdminUsers"
        ],
        "description": "Gets the list of all available users for Admin.",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/users/role/{id}": {
      "put": {
        "tags": [
          "AdminUsers"
        ],
        "description": "change user's role, Admin to User or vice versa",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/users/{id}": {
      "delete": {
        "tags": [
          "AdminUsers"
        ],
        "description": "soft delete a user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "AdminUsers"
        ],
        "description": "Reactive a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/cart/checkout/{cartId}": {
      "post": {
        "tags": [
          "User routes"
        ],
        "description": "check out cart for individual user",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/cartitems/add": {
      "post": {
        "tags": [
          "User routes"
        ],
        "description": "Add item to cart",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "productId": {
                  "example": "any"
                },
                "quantity": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/cartitems/delete/{itemsId}": {
      "delete": {
        "tags": [
          "User routes"
        ],
        "description": "Delete an item from the cart; the result will depend on whether the cart has been checked out or not",
        "parameters": [
          {
            "name": "itemsId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "cartId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/order/": {
      "get": {
        "tags": [
          "User routes"
        ],
        "description": "Get orders for individual users",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  }
}